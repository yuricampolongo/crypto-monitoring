// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yuricampolongo/crypto-monitoring/clients/restclient (interfaces: RestInterface)

// Package restclient is a generated GoMock package.
package restclient

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRestInterface is a mock of RestInterface interface.
type MockRestInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRestInterfaceMockRecorder
}

// MockRestInterfaceMockRecorder is the mock recorder for MockRestInterface.
type MockRestInterfaceMockRecorder struct {
	mock *MockRestInterface
}

// NewMockRestInterface creates a new mock instance.
func NewMockRestInterface(ctrl *gomock.Controller) *MockRestInterface {
	mock := &MockRestInterface{ctrl: ctrl}
	mock.recorder = &MockRestInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRestInterface) EXPECT() *MockRestInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockRestInterface) Get(arg0, arg1 string, arg2 map[string]string) (*Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(*Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRestInterfaceMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRestInterface)(nil).Get), arg0, arg1, arg2)
}
